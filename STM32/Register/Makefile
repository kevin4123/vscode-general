##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.6.0.1-B1] date: [Sun Oct 12 07:14:31 CST 2025]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = App


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og			# Optimize debugging experience


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
main.c \
CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c \
# CMSIS/CM3/CoreSupport/core_cm3.c \
# Core/Src/main.c \
# Core/Src/stm32f1xx_it.c \
# Core/Src/stm32f1xx_hal_msp.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio_ex.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_dma.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_pwr.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c \
# Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_exti.c \
# Core/Src/system_stm32f1xx.c  

# ASM sources
ASM_SOURCES =  \
startup_stm32f10x_md.s

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
CXX = $(GCC_PATH)/$(PREFIX)g++
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp			# use assembler with C preprocessor
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
CXX = $(PREFIX)g++
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex				# Intel HEX format
BIN = $(CP) -O binary -S		# generates a raw binary file, strip debug symbols
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m3

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DSTM32F10X_MD \
# -DUSE_HAL_DRIVER

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICMSIS/CM3/CoreSupport \
-ICMSIS/CM3/DeviceSupport/ST/STM32F10x \
-IDriver/BSP \
-IUser 
# -ICore/Inc \
# -IDrivers/STM32F1xx_HAL_Driver/Inc/Legacy \
# -IDrivers/STM32F1xx_HAL_Driver/Inc \
# -IDrivers/CMSIS/Device/ST/STM32F1xx/Include \
# -IDrivers/CMSIS/Include


# compile gcc flags
# Warn All (-Wall)
# Place each function or data item into its own section in the output file (-fdata-sections -ffunction-sections)
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

# if $(DEBUG) == 1
ifeq ($(DEBUG), 1)		
CFLAGS += -g -gdwarf-2			# DWARF version 2 for debugging info
ASFLAGS += -g -gdwarf-2			
endif


# generate dependency information, not include system header files(-MMD)
# add a phony target for each dependency other than the main file (-MP)
#  specifies a file to write the dependencies to (-MF)
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"		# pattern substitution


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F103XX_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 		# nosys lib provides default implementation of certain functions like 'exit' and 'itoa'
LIBDIR = 
# newlib-nano
# pass argument to linker (-Wl,)
# cross-reference table (-Wl,--cref)
# garbage-collect unused sections (-Wl,--gc-sections)
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))		# set search path for .c files
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))		# set search path for .s files
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))	# set search path for .S files

# '<' is first dependency file name 
# '@' is target file name
$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
# include all dependency files
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
